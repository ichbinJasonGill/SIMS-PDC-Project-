@model SIMS__PDC_Project_.Models.Advisor

@{
    ViewBag.Title = "AdvisorSignup";
    Layout = "~/Views/Shared/_MinimalLayout.cshtml";

    var campusList = new List<SelectListItem>
    {
    new SelectListItem { Value = "101", Text = "Mian Campus" },
    new SelectListItem { Value = "102", Text = "City Campus" }
    };
}

<div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="card shadow p-4 w-100" style="max-width: 500px;">

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success" role="alert">
                @TempData["Message"]
            </div>
        }

        <h2 class="text-center mb-4 text-success fs-1">Advisor Signup</h2>

        @using (Html.BeginForm("AdvisorSignup", "LoginSignup", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

            <div class="mb-3">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your full name" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.EditorFor(model => model.phoneNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your phone number" } })
                @Html.ValidationMessageFor(model => model.phoneNo, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your email" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.PasswordFor(model => model.pass, new { @class = "form-control", placeholder = "Enter your password" })
                @Html.ValidationMessageFor(model => model.pass, "", new { @class = "text-danger" })
            </div>

            <div class="mb-4">
                @Html.DropDownListFor(model => model.campus, campusList, "-- Select Your Campus --", new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.campus, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex flex-column">
                <button type="submit" class="btn btn-success w-100 mb-3">Signup</button>
                <p class="text-center fs-6">
                    Already have an account?
                    @Html.ActionLink("Login", "Login", "LoginSignup")
                </p>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval") <!-- Required for client-side validation -->
}
